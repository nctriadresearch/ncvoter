720 PERSON
730 PITT
740 POLK
750 RANDOLPH
760 RICHMOND
770 ROBESON
780 ROCKINGHAM
790 ROWAN
800 RUTHERFORD
810 SAMPSON
820 SCOTLAND
830 STANLY
840 STOKES
850 SURRY
860 SWAIN
870 TRANSYLVANIA
880 TYRRELL
890 UNION
900 VANCE
910 WAKE
920 WARREN
930 WASHINGTON
940 WATAUGA
950 WAYNE
960 WILKES
970 WILSON
980 YADKIN
990 YANCEY
"
county_codes <- data.table::fread(file = raw_text, header = FALSE)
raw_text <-
"000 ALAMANCE
010 ALEXANDER
020 ALLEGHANY
030 ANSON
040 ASHE
050 AVERY
060 BEAUFORT
070 BERTIE
080 BLADEN
090 BRUNSWICK
100 BUNCOMBE
110 BURKE
120 CABARRUS
130 CALDWELL
140 CAMDEN
150 CARTERET
160 CASWELL
170 CATAWBA
180 CHATHAM
190 CHEROKEE
200 CHOWAN
210 CLAY
220 CLEVELAND
230 COLUMBUS
240 CRAVEN
250 CUMBERLAND
260 CURRITUCK
270 DARE
280 DAVIDSON
290 DAVIE
300 DUPLIN
310 DURHAM
320 EDGECOMBE
330 FORSYTH
340 FRANKLIN
350 GASTON
360 GATES
370 GRAHAM
380 GRANVILLE
390 GREENE
400 GUILFORD
410 HALIFAX
420 HARNETT
430 HAYWOOD
440 HENDERSON
450 HERTFORD
460 HOKE
470 HYDE
480 IREDELL
490 JACKSON
500 JOHNSTON
510 JONES
520 LEE
530 LENOIR
540 LINCOLN
550 MACON
560 MADISON
570 MARTIN
580 MCDOWELL
590 MECKLENBURG
600 MITCHELL
610 MONTGOMERY
620 MOORE
630 NASH
640 NEW HANOVER
650 NORTHAMPTON
660 ONSLOW
670 ORANGE
680 PAMLICO
690 PASQUOTANK
700 PENDER
710 PERQUIMANS
720 PERSON
730 PITT
740 POLK
750 RANDOLPH
760 RICHMOND
770 ROBESON
780 ROCKINGHAM
790 ROWAN
800 RUTHERFORD
810 SAMPSON
820 SCOTLAND
830 STANLY
840 STOKES
850 SURRY
860 SWAIN
870 TRANSYLVANIA
880 TYRRELL
890 UNION
900 VANCE
910 WAKE
920 WARREN
930 WASHINGTON
940 WATAUGA
950 WAYNE
960 WILKES
970 WILSON
980 YADKIN
990 YANCEY"
county_codes <- data.table::fread(file = raw_text, header = FALSE)
county_codes <- read.delim(file = raw_text, header = FALSE, sep = "\")
county_codes <- read.delim(file = raw_text, header = FALSE, sep = "\"))
county_codes <- read.delim(file = raw_text, header = FALSE, sep = "\n"))
county_codes <- read.delim(file = raw_text, header = FALSE, sep = "\n")
raw_text <-
"000 ALAMANCE
010 ALEXANDER
020 ALLEGHANY
030 ANSON
040 ASHE
050 AVERY
060 BEAUFORT
070 BERTIE
080 BLADEN
090 BRUNSWICK
100 BUNCOMBE
110 BURKE
120 CABARRUS
130 CALDWELL
140 CAMDEN
150 CARTERET
160 CASWELL
170 CATAWBA
180 CHATHAM
190 CHEROKEE
200 CHOWAN
210 CLAY
220 CLEVELAND
230 COLUMBUS
240 CRAVEN
250 CUMBERLAND
260 CURRITUCK
270 DARE
280 DAVIDSON
290 DAVIE
300 DUPLIN
310 DURHAM
320 EDGECOMBE
330 FORSYTH
340 FRANKLIN
350 GASTON
360 GATES
370 GRAHAM
380 GRANVILLE
390 GREENE
400 GUILFORD
410 HALIFAX
420 HARNETT
430 HAYWOOD
440 HENDERSON
450 HERTFORD
460 HOKE
470 HYDE
480 IREDELL
490 JACKSON
500 JOHNSTON
510 JONES
520 LEE
530 LENOIR
540 LINCOLN
550 MACON
560 MADISON
570 MARTIN
580 MCDOWELL
590 MECKLENBURG
600 MITCHELL
610 MONTGOMERY
620 MOORE
630 NASH
640 NEW HANOVER
650 NORTHAMPTON
660 ONSLOW
670 ORANGE
680 PAMLICO
690 PASQUOTANK
700 PENDER
710 PERQUIMANS
720 PERSON
730 PITT
740 POLK
750 RANDOLPH
760 RICHMOND
770 ROBESON
780 ROCKINGHAM
790 ROWAN
800 RUTHERFORD
810 SAMPSON
820 SCOTLAND
830 STANLY
840 STOKES
850 SURRY
860 SWAIN
870 TRANSYLVANIA
880 TYRRELL
890 UNION
900 VANCE
910 WAKE
920 WARREN
930 WASHINGTON
940 WATAUGA
950 WAYNE
960 WILKES
970 WILSON
980 YADKIN
990 YANCEY"
county_codes <- read.delim(file = raw_text, header = FALSE, sep = "\n")
county_codes <- read.csv(file = "country-codes.csv",
header = FALSE, stringsAsFactors = FALSE)
county_codes <- read.csv(file = "county-codes.csv",
header = FALSE, stringsAsFactors = FALSE)
county_codes <- read.csv(file = "data-raw/county-codes.csv",
header = FALSE, stringsAsFactors = FALSE)
View(county_codes)
colnames(county_codes) <- c("country_number", "county_name")
View(county_codes)
county_codes$country_number <- as.numeric(substr(county_codes$country_number), 1,2)
county_codes$country_number <- as.numeric(substr(county_codes$country_number), 1, 1,2)
county_codes$country_number <- as.numeric(substr(county_codes$country_number, 1,2))
View(county_codes)
county_codes$country_number <- as.numeric(substr(county_codes$country_number, 1,2))
View(county_codes)
dplyr::glimpse(count.fields())
dplyr::glimpse(country_codes)
dplyr::glimpse(county_codes)
usethis::use_data(county_codes)
match(x = "FORSYTH", county_codes)
county_codes$county_name=="Forsyth"
county_code[county_codes$county_name=="Forsyth",]
county_codes[county_codes$county_name=="Forsyth",]
county_codes[county_codes$county_name=="FORSYTH",]
View(county_codes)
county_codes[county_codes$county_name=="FORSYTH",]
county_codes[county_codes$county_name=="FORSYTH",]
county_codes$county_name=="FORSYTH"
county_codes$county_name=="FORSYTH "
county_codes$county_name=="FORSYTH " %>% sum()
library(dplyr)
county_codes$county_name=="FORSYTH " %>% sum()
county_codes$county_name=="FORSYTH" %>% sum()
county_codes$county_name=="FORSYTH"
x <- "Forsyth"
x <- toupper(x)
dplyr::filter(county_codes, county_name == x)
county_codes
x <- "YANCEY"
x <- toupper(x)
dplyr::filter(county_codes, county_name == x)
glimpse(county_codes)
county_codes <- read.csv(file = "data-raw/county-codes.csv",
header = FALSE, stringsAsFactors = FALSE)
colnames(county_codes) <- c("country_number", "county_name")
county_codes$country_number <- as.numeric(substr(county_codes$country_number, 1,2))
usethis::use_data(county_codes)
usethis::use_data(county_codes, overwrite = T)
x <- "YANCEY"
if(is.character(x)){
x <- toupper(x)
dplyr::filter(county_codes, county_name == x)
}
county_codes$county_name
county_codes$county_name <- trimws(county_codes$county_name, "both")
usethis::use_data(county_codes, overwrite = T)
dplyr::filter(county_codes, county_name == x)
county_codes[["county_name"]]
county_codes["county_name", drop = TRUE]
if(county_codes[["county_name"]] %in% x)
if(county_codes[["county_name"]] %in% x){
stop()
}
if(x %in% county_codes[["county_name"]]){
stop()
}
x %in% county_codes[["county_name"]]
if(is.character(x)){
x <- toupper(x)
if(x %in% county_codes[["county_name"]]){
dplyr::pull(dplyr::filter(county_codes, county_name == x))
} else{
stop("You have not entered a valid county name.")
}
}
return_valid_county <- function(x){
if(is.character(x)){
x <- toupper(x)
if(x %in% county_codes[["county_name"]]){
dplyr::pull(dplyr::filter(county_codes, county_name == x))
} else{
stop("You have not entered a valid county name.")
}
} else{
x <- suppress_all(as.numeric(x))
x <- as.integer(round(x))
if(!x %in% 1:100){
stop("Please pass a valid code for country (i.e. 1-100)")
}
x
}
}
return_valid_county("Forsyth")
county_codes <- read.csv(file = "data-raw/county-codes.csv",
header = FALSE, stringsAsFactors = FALSE)
colnames(county_codes) <- c("county_number", "county_name")
county_codes$county_number <- as.numeric(substr(county_codes$county_number, 1,2))
county_codes$county_name <- trimws(county_codes$county_name, "both")
usethis::use_data(county_codes, overwrite = T)
return_valid_county <- function(x){
if(is.character(x)){
x <- toupper(x)
if(x %in% county_codes[["county_name"]]){
dplyr::pull(dplyr::filter(county_codes, county_name == x), county_number)
} else{
stop("You have not entered a valid county name.")
}
} else{
x <- suppress_all(as.numeric(x))
x <- as.integer(round(x))
if(!x %in% 1:100){
stop("Please pass a valid code for country (i.e. 1-100)")
}
x
}
}
return_valid_county("Forsyth")
return_valid_county("yancy")
return_valid_county("yancey")
return_valid_county("2")
class(as.numeric("2"))
class(as.numeric("g"))
is.na(as.numeric("g"))
return_valid_county <- function(x){
if(is.character(x) &&  is.na(suppress_all(as.numeric("g")))){
x <- toupper(x)
if(x %in% county_codes[["county_name"]]){
dplyr::pull(dplyr::filter(county_codes, county_name == x), county_number)
} else{
stop("You have not entered a valid county name.")
}
} else{
x <- suppress_all(as.numeric(x))
x <- as.integer(round(x))
if(!x %in% 1:100){
stop("Please pass a valid code for country (i.e. 1-100)")
}
x
}
}
return_valid_county("2")
suppress_all <- function(x){
x <- suppressMessages(suppressWarnings(x))
x
}
return_valid_county <- function(x){
if(is.character(x) &&  is.na(suppress_all(as.numeric("g")))){
x <- toupper(x)
if(x %in% county_codes[["county_name"]]){
dplyr::pull(dplyr::filter(county_codes, county_name == x), county_number)
} else{
stop("You have not entered a valid county name.")
}
} else{
x <- suppress_all(as.numeric(x))
x <- as.integer(round(x))
if(!x %in% 1:100){
stop("Please pass a valid code for country (i.e. 1-100)")
}
x
}
}
return_valid_county("2")
return_valid_county <- function(x){
if(is.character(x) &&  is.na(suppress_all(as.numeric(x)))){
x <- toupper(x)
if(x %in% county_codes[["county_name"]]){
dplyr::pull(dplyr::filter(county_codes, county_name == x), county_number)
} else{
stop("You have not entered a valid county name.")
}
} else{
x <- suppress_all(as.numeric(x))
x <- as.integer(round(x))
if(!x %in% 1:100){
stop("Please pass a valid code for country (i.e. 1-100)")
}
x
}
}
return_valid_county("2")
return_valid_county("g")
return_valid_county("2332")
return_valid_county("22")
temp_file <- tempfile(fileext = ".zip")
temp_file
get_voters <- function(file_type, county, local_version = FALSE){
file_type_match <- match.arg(file_type,
c("nchist", "ncvoter"), several.ok = FALSE)
county_match <- return_valid_county(county)
# Contruct the URL
url <- paste0("https://s3.amazonaws.com/dl.ncsbe.gov/data/",
file_type_match,
county_match,
".zip")
temp_file <- tempfile(fileext = ".zip")
dat <- data.table::fread(unzip(download.file(url, destfile = temp_file)))
dat
}
get_voters(file_type = "nchist", county = "forsyth")
get_voters <- function(file_type, county, local_version = FALSE){
file_type_match <- match.arg(file_type,
c("ncvhist", "ncvoter"), several.ok = FALSE)
county_match <- return_valid_county(county)
# Contruct the URL
url <- paste0("https://s3.amazonaws.com/dl.ncsbe.gov/data/",
file_type_match,
county_match,
".zip")
temp_file <- tempfile(fileext = ".zip")
dat <- data.table::fread(unzip(download.file(url, destfile = temp_file)))
dat
}
get_voters(file_type = "ncvhist", county = "forsyth")
download.file("https://s3.amazonaws.com/dl.ncsbe.gov/data/ncvhis33.zip")
download.file("https://s3.amazonaws.com/dl.ncsbe.gov/data/ncvhis33.zip", temp_file)
unzip(temp_file)
read.delim(nzip(temp_file))
read.delim(unzip(temp_file))
data.table::fread(unzip(temp_file))
get_voters <- function(file_type, county, local_version = FALSE){
file_type_match <- match.arg(file_type,
c("ncvhist", "ncvoter"), several.ok = FALSE)
county_match <- return_valid_county(county)
# Contruct the URL
url <- paste0("https://s3.amazonaws.com/dl.ncsbe.gov/data/",
file_type_match,
county_match,
".zip")
temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file)
dat <- data.table::fread(unzip(temp_file))
unlink(temp_file)
dat
}
get_voters(file_type = "ncvhist", county = "forsyth")
get_voters <- function(file_type, county, local_version = FALSE){
file_type_match <- match.arg(file_type,
c("ncvhis", "ncvoter"), several.ok = FALSE)
county_match <- return_valid_county(county)
# Contruct the URL
url <- paste0("https://s3.amazonaws.com/dl.ncsbe.gov/data/",
file_type_match,
county_match,
".zip")
url
temp_file <- tempfile(fileext = ".zip")
download.file(url, destfile = temp_file)
dat <- data.table::fread(unzip(temp_file))
unlink(temp_file)
dat
}
get_voters(file_type = "ncvhist", county = "forsyth")
get_voters(file_type = "ncvhis", county = "forsyth")
usethis::use_package("dplyr")
usethis::use_package("data.table")
?unzip
usethis::use_package("utils")
usethis::use_package("RSQLite")
install.packages("RSQLite")
usethis::use_package("RSQLite")
usethis::use_travis()
usethis::use_travis()
usethis::use_appveyor()
usethis::use_readme_rmd()
usethis::use_travis()
usethis::use_appveyor()
usethis::use_coverage()
usethis::use_code_of_conduct()
usethis::use_travis()
usethis::use_travis()
usethis::use_appveyor()
usethis::use_badge("experimental")
usethis::use_lifecycle_badge("experimental")
